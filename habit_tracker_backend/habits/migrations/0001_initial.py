# Generated by Django 5.2 on 2025-04-18 19:38

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('passhash', models.CharField(max_length=255)),
                ('longest_streak', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='New Group', max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='habits.person')),
                ('secure_key', models.CharField(max_length=255)),
                ('admin_levels', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='habits.person')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('join_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='habits.group'),
        ),
        migrations.AddField(
            model_name='person',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='members', to='habits.group'),
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('habit_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed')], default='active', max_length=20)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('repeat_days', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday'), ('Sat', 'Saturday'), ('Sun', 'Sunday')], max_length=3), blank=True, default=list, size=None)),
                ('target_days_per_week', models.PositiveIntegerField(blank=True, null=True)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='habits', to='habits.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habits', to='habits.person')),
            ],
        ),
        migrations.CreateModel(
            name='Goals',
            fields=[
                ('goal_id', models.AutoField(primary_key=True, serialize=False)),
                ('target', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('achieved', 'Achieved'), ('deletion', 'Deleted')], default='pending', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='habits.person')),
                ('habit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='habits.habit')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='habits.person')),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='habits.habit')),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('reminder_id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.TimeField()),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('custom', 'Custom')], default='daily', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='habits.habit')),
            ],
        ),
        migrations.CreateModel(
            name='RewardsPenalties',
            fields=[
                ('reward_penalty_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('reward', 'Reward'), ('penalty', 'Penalty')], max_length=20)),
                ('description', models.TextField()),
                ('date_assigned', models.DateTimeField(auto_now_add=True)),
                ('is_redeemed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards_penalties', to='habits.person')),
            ],
        ),
        migrations.CreateModel(
            name='Streak',
            fields=[
                ('streak_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('length', models.PositiveIntegerField(default=0)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='streaks', to='habits.group')),
                ('habit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='streaks', to='habits.habit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streaks', to='habits.person')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('achievement_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('locked_status', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('date_unlocked', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='habits.person')),
                ('streak', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achievements', to='habits.streak')),
            ],
        ),
        migrations.CreateModel(
            name='HabitLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='habits.habit')),
            ],
            options={
                'unique_together': {('habit', 'date')},
            },
        ),
    ]
